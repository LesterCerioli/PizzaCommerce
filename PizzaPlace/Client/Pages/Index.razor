@page "/"
<!-- Menu -->

<PizzaList Title="Our selection of pizzas"
           Menu="@State.Menu"
           Selected="@(async (pizza) => AddToBasket(pizza))" />

<!-- End Menu -->
<!-- Shopping Busket -->

<ShoppingBasket Title="Your current order"
                Basket="@State.Basket"
                GetPizzaFromId="@State.Menu.GetPizza"
                Selected="@((pos) => RemoveFromBasket(pos))" />

<!-- End Shopping Busket -->
<!-- Customer Entry -->

<h1>Please enter your details below</h1>

<EditForm OnValidSubmit="PlaceOrder" Model="@State.Basket.Customer">
    <DataAnnotationsValidator />
    <div class="form-group row mb-1">
        <label class="col-sm-3 col-form-label" for="FirstName">Name:</label>
        <div class="col-sm-9">
            <InputText class="form-control" @bind-Value="@State.Basket.Customer.Name" />
            <ValidationMessage For="@(() => State.Basket.Customer.Name)" />
        </div>
    </div>
    <div class="form-group row mb-1">
        <label class="col-sm-3 col-form-label" for="LastName">Street:</label>
        <div class="col-sm-9">
            <InputText class="form-control" @bind-Value="@State.Basket.Customer.Street" />
            <ValidationMessage For="@(() => State.Basket.Customer.Street)" />
        </div>
    </div>
    <div class="form-group row mb-1">
        <label class="col-sm-3 col-form-label" for="Birthday">City:</label>
        <div class="col-sm-9">
            <InputText class="form-control" @bind-Value="@State.Basket.Customer.City" />
            <ValidationMessage For="@(() => State.Basket.Customer.City)" />
        </div>
    </div>
    <div class="form-group mb-0">
        <button type="submit" id="BtnRegister" class="btn btn-primary">
            Checkout
        </button>
    </div>
</EditForm>

<!-- End Customer Entry -->

<p>@State.ToJson()</p>

@code {
    private State State { get; } = new State()
    {
        Menu = new Menu
        {
            Pizzas = new List<Pizza>
{
                new Pizza(1, "Pepperoni", 8.99M, Spiciness.Spicy ),
                new Pizza(2, "Margarita", 7.99M, Spiciness.None ),
                new Pizza(3, "Diabolo", 9.99M, Spiciness.Hot )
            }
        }
    };

    private string SpicinessImage(Spiciness spiciness) => $"images/{spiciness.ToString().ToLower()}.png";

    private void AddToBasket(Pizza pizza)
    {
        Console.WriteLine($"Added pizza {pizza.Name}");
        State.Basket.Add(pizza.Id);
    }

    private void RemoveFromBasket(int pos)
    {
        Console.WriteLine($"Removing pizza at pos {pos}");
        State.Basket.RemoveAt(pos);
    }

    private void PlaceOrder()
    {
        Console.WriteLine("Placing order");
    }
}
